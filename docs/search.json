[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Data Set Introduction",
    "section": "",
    "text": "Here is Shuting Ouyang, planing to do an investigation on relevant factors related to happiness level.\nThe data set I will be using is World Happiness Report up to 2022 from Kaggle.\n\nlibrary(shiny)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Global Happiness Level Report",
    "section": "",
    "text": "Warning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\nℹ The deprecated feature was likely used in the dplyr package.\n  Please report the issue at &lt;https://github.com/tidyverse/dplyr/issues&gt;.\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\nSocial_China &lt;- ggplot(filter(Summery_Factors, Country == \"China\"), \n                       aes(x = Years, y = `Social Support`)) +\n  geom_col()\n\nHealth_China &lt;- ggplot(filter(Summery_Factors, Country == \"China\"), \n                       aes(x = Years, y = `Health Life Expectancy`)) +\n  geom_col()\n\n\nSocial_China\nHealth_China\n\n\n#Social Support_2020    Health Life Expectancy_2020 Freedom_2020    Generosity_2020 Perceptions of corruption_2020"
  },
  {
    "objectID": "Topic.html",
    "href": "Topic.html",
    "title": "Topic",
    "section": "",
    "text": "####The topic I have finalized is “What factor is most relevant in determine country happiness level?”\n####I explored data sources in tidy Tuesday and Kaggle. And at last decide to use the World Happiness Report up to 2022 data in Kaggle.\n\n#Dataset 1\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\nLS_Summery &lt;- read.csv(\"C:/Users/ouyangshuting/Desktop/NM2207/Yonder2001.github.io/Data/Happiness Score 2019-2024 .csv\")\n\n#Tidying LS_Summery\nLS_Summery_long &lt;- LS_Summery %&gt;% \n  pivot_longer(cols = c(-Country), names_to = \"Years\",values_to = \"Ladder Score\")\n\nTidy_LS_Summery &lt;- LS_Summery_long %&gt;% \n  pivot_wider(names_from = Country, values_from = \"Ladder Score\")\n\n\n#Tidying HR_Summery\nHR_Summery&lt;-read.csv(\"C:/Users/ouyangshuting/Desktop/NM2207/Yonder2001.github.io/Data/Happiness Ranking 2019-2024.csv\")\n\nHR_Summery_long &lt;- HR_Summery %&gt;% \n  pivot_longer(cols = c(-Country), names_to = \"Years\",values_to = \"Happiness Rank\")\n\nTidy_HR_Summery &lt;- HR_Summery_long %&gt;% \n  pivot_wider(names_from = Country, values_from = \"Happiness Rank\")\n\n\nlibrary(ggplot2)\n#Muate Variance \nHR_Summery_long &lt;- HR_Summery_long %&gt;%\n  group_by(Country) %&gt;%\n  mutate(variance = var(`Happiness Rank`))\n\nLS_Summery_long &lt;- LS_Summery_long %&gt;%\n  group_by(Country) %&gt;%\n  mutate(variance = var(`Ladder Score`))\n\n#Check Variance \nHR_BigVariance &lt;- HR_Summery_long %&gt;%\n  filter(variance &gt; 100)\nHR_Unchange &lt;- HR_Summery_long %&gt;%\n  filter(variance &lt;20)\nLS_BigVariance &lt;- LS_Summery_long %&gt;%\n  filter(variance &gt; 0.1)\nLS_Unchange &lt;- LS_Summery_long %&gt;%\n  filter(variance &lt;0.003)\n\n#DataSet 2\nFull_Report_of_Factors &lt;-read.csv(\"C:/Users/ouyangshuting/Desktop/NM2207/Yonder2001.github.io/Data/Final_Happiness_Score.csv\")\n\nHealth &lt;- Full_Report_of_Factors[, c(\"Country\",\"Health.Life.Expectancy_2019\",\"Health.Life.Expectancy_2020\",\"Health.Life.Expectancy_2021\",\"Health.Life.Expectancy_2022\",\"Health.Life.Expectancy_2023\",\"Health.Life.Expectancy_2024\")]\n\n#Tidying DATA of 6 factors\nGDP_long &lt;- Full_Report_of_Factors %&gt;%\n  pivot_longer(cols = starts_with(\"GDP\"), names_to = \"Years\", values_to = \"GDP per capita\")\nGDP_long &lt;-GDP_long[,c(\"Country\",\"Years\",\"GDP per capita\")]\n  \nSS_long &lt;-Full_Report_of_Factors %&gt;%\n  pivot_longer(cols = starts_with(\"Social\"), names_to = \"Years\", values_to = \"Social Support\")\nSS_long &lt;-SS_long[,c(\"Country\",\"Years\",\"Social Support\")]\n\nHealth_long &lt;- Full_Report_of_Factors %&gt;%\n  pivot_longer(cols = starts_with(\"Health\"), names_to = \"Years\", values_to = \"Health Life Expectancy\")\nHealth_long &lt;-Health_long[,c(\"Country\",\"Years\",\"Health Life Expectancy\")]\n\nFreedom_long &lt;- Full_Report_of_Factors %&gt;%\n  pivot_longer(cols = starts_with(\"Freedom\"), names_to = \"Years\", values_to = \"Freedom in Life\")\nFreedom_long &lt;-Freedom_long[,c(\"Country\",\"Years\",\"Freedom in Life\")]\n\nGenerosity_long &lt;- Full_Report_of_Factors %&gt;%\n  pivot_longer(cols = starts_with(\"Generosity\"), names_to = \"Years\", values_to = \"Generosity\")\nGenerosity_long &lt;- Generosity_long[,c(\"Country\",\"Years\",\"Generosity\")]\n\nCorroption_long &lt;- Full_Report_of_Factors %&gt;%\n  pivot_longer(cols = starts_with(\"Perceptions\"), names_to = \"Years\", values_to = \"Perceptions of corruption\")\nCorroption_long &lt;- Corroption_long[,c(\"Country\",\"Years\",\"Perceptions of corruption\")]\n\n#Combine\nSummery_Factors &lt;- bind_rows(\n  GDP_long,\n  SS_long,\n  Health_long,\n  Freedom_long,\n  Generosity_long,\n  Corroption_long\n) \nSummery_Factors &lt;- Summery_Factors %&gt;%\n  mutate(Years = str_replace(Years, \".*_(\\\\d+)$\", \"\\\\1\"))\n\n#NA omit removes NA, \".\" means check every row every column \nSummery_Factors &lt;- Summery_Factors %&gt;% group_by(Country, Years) %&gt;% summarise_all(~ na.omit(.))\n\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\nℹ The deprecated feature was likely used in the dplyr package.\n  Please report the issue at &lt;https://github.com/tidyverse/dplyr/issues&gt;.\n\n\n\n#Draw Line Graph for big variaed country\nLS_line_graph &lt;- ggplot(data = LS_BigVariance, \n                        aes(x = Years, \n                            y = `Ladder Score`, \n                            group = Country)) +\n  geom_line(aes(color = Country)) +\n  geom_point(aes(color = Country))+ \n  scale_color_viridis_d()\n\nLS_line_graph_plotly &lt;- ggplotly(LS_line_graph)\nLS_line_graph_plotly\n\n\n\n\n\n\n#Draw Line graph for no chnge country \nLS_line_graph &lt;- ggplot(data = LS_Unchange, \n                        aes(x = Years, \n                            y = `Ladder Score`, \n                            group = Country)) +\n  geom_line(aes(color = Country)) +\n  geom_point(aes(color = Country))+ scale_color_viridis_d()\n\nLS_line_graph_plotly &lt;- ggplotly(LS_line_graph)\nLS_line_graph_plotly"
  }
]