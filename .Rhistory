1 + 3
read.csv(C:\Users\ouyangshuting\Desktop\NM2207\Yonder2001.github.io\2022.csv)
read.csv("C:\Users\ouyangshuting\Desktop\NM2207\Yonder2001.github.io\2022.csv")
read.csv("C:/Users/ouyangshuting/Desktop/NM2207/Yonder2001.github.io/2022.csv")
read.csv("2022.csv")
Dataset <- read.csv("2022.csv")
Dataset
Dataset <- read.csv("2022.csv")
Dataset
Dataset <- read.csv("2022.csv")
glimpse(Dataset)
Dataset <- read.csv("2022.csv")
library(tidyverse)
glimpse(Dataset)
Dataset <- read.csv("2022.csv")
library(tidyverse)
glimpse(Dataset)
Dataset <- read.csv("2022.csv")
library(tidyverse)
glimpse(Dataset)
1 + 1
# Load required libraries
library(ggplot2)
# Sample data
# Let's say you have latitude and longitude data for some points
data <- data.frame(
latitude = c(40.7128, 34.0522, 37.7749),  # Example latitudes
longitude = c(-74.0060, -118.2437, -122.4194),  # Example longitudes
value = c(10, 20, 30)  # Example values (could be anything you want to map)
)
# Create a base map
map <- ggplot() +
borders("world", colour = "gray50", fill = "gray90", xlim = c(-180, 180), ylim = c(-90, 90))
# Add points for data mapping
map <- map +
geom_point(data = data, aes(x = longitude, y = latitude, size = value, color = value)) +
scale_size_continuous(range = c(3, 10)) +  # Adjust the range of point sizes as needed
scale_color_gradient(low = "blue", high = "red") +  # Adjust color gradient as needed
labs(title = "Data Mapping Visualization", x = "Longitude", y = "Latitude")
# Display the map
print(map)
1 + 1
# Load required libraries
library(ggplot2)
# Sample data
# Let's say you have latitude and longitude data for some points
data <- data.frame(
latitude = c(40.7128, 34.0522, 37.7749),  # Example latitudes
longitude = c(-74.0060, -118.2437, -122.4194),  # Example longitudes
value = c(10, 20, 30)  # Example values (could be anything you want to map)
)
# Create a base map
map <- ggplot() +
borders("world", colour = "gray50", fill = "gray90", xlim = c(-180, 180), ylim = c(-90, 90))
# Add points for data mapping
map <- map +
geom_point(data = data, aes(x = longitude, y = latitude, size = value, color = value)) +
scale_size_continuous(range = c(3, 10)) +  # Adjust the range of point sizes as needed
scale_color_gradient(low = "blue", high = "red") +  # Adjust color gradient as needed
labs(title = "Data Mapping Visualization", x = "Longitude", y = "Latitude")
# Display the map
print(map)1
1 + 1
# Load required libraries
library(ggplot2)
# Sample data
# Let's say you have latitude and longitude data for some points
data <- data.frame(
latitude = c(40.7128, 34.0522, 37.7749),  # Example latitudes
longitude = c(-74.0060, -118.2437, -122.4194),  # Example longitudes
value = c(10, 20, 30)  # Example values (could be anything you want to map)
)
# Create a base map
map <- ggplot() +
borders("world", colour = "gray50", fill = "gray90", xlim = c(-180, 180), ylim = c(-90, 90))
# Add points for data mapping
map <- map +
geom_point(data = data, aes(x = longitude, y = latitude, size = value, color = value)) +
scale_size_continuous(range = c(3, 10)) +  # Adjust the range of point sizes as needed
scale_color_gradient(low = "blue", high = "red") +  # Adjust color gradient as needed
labs(title = "Data Mapping Visualization", x = "Longitude", y = "Latitude")
# Display the map
print(map)
# Load required libraries
library(ggplot2)
# Sample data
data <- data.frame(
latitude = c(40.7128, 34.0522, 37.7749),  # Example latitudes
longitude = c(-74.0060, -118.2437, -122.4194),  # Example longitudes
value = c(10, 20, 30),  # Example values (could be anything you want to map)
region = c("A", "B", "A")  # Example regions
)
# Create a base map
map <- ggplot() +
borders("world", colour = "gray50", fill = "gray90", xlim = c(-180, 180), ylim = c(-90, 90))
# Add points for data mapping
map <- map +
geom_point(data = data, aes(x = longitude, y = latitude, size = value, color = region)) +
scale_size_continuous(range = c(3, 10)) +  # Adjust the range of point sizes as needed
scale_color_manual(values = c("A" = "blue", "B" = "red")) +  # Specify colors for each region
labs(title = "Data Mapping Visualization", x = "Longitude", y = "Latitude")
# Display the map
print(map)
install.packages(leaflet)
library(leaflet)
install.packages('leaflet')
#Load Packages
install.packages('leaflet')
#Load Packages
library(leaflet)
library(tidyverse)
#Load Packages
library(leaflet)
library(tidyverse)
library(sf)
#Load Packages
library(leaflet)
library(tidyverse)
install.packages("sf")
